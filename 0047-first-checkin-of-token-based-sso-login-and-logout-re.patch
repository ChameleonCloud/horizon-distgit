From d6e0bcf8a8b5088c43b74d9a786e62558575dee7 Mon Sep 17 00:00:00 2001
From: Alex Rocha <rochaa@tacc.utexas.edu>
Date: Mon, 17 Dec 2018 11:18:11 -0600
Subject: [PATCH 47/52] first checkin of token-based sso login and logout
 redirect

---
 horizon/templates/auth/_logout.html      |  2 +
 horizon/templates/auth/_logout_form.html | 45 ++++++++++++++++++++++
 horizon/templates/auth/_logout_page.html | 21 +++++++++++
 horizon/templates/auth/logout.html       | 14 +++++++
 openstack_dashboard/cc_web_sso_urls.py   | 27 ++++++++++++++
 openstack_dashboard/cc_websso_views.py   | 64 ++++++++++++++++++++++++++++++++
 openstack_dashboard/settings.py          |  6 +--
 7 files changed, 176 insertions(+), 3 deletions(-)
 create mode 100644 horizon/templates/auth/_logout.html
 create mode 100644 horizon/templates/auth/_logout_form.html
 create mode 100644 horizon/templates/auth/_logout_page.html
 create mode 100644 horizon/templates/auth/logout.html
 create mode 100644 openstack_dashboard/cc_web_sso_urls.py
 create mode 100644 openstack_dashboard/cc_websso_views.py

diff --git a/horizon/templates/auth/_logout.html b/horizon/templates/auth/_logout.html
new file mode 100644
index 0000000..1e1457b
--- /dev/null
+++ b/horizon/templates/auth/_logout.html
@@ -0,0 +1,2 @@
+{% load i18n %}
+  {% include 'auth/_logout_page.html' %}
diff --git a/horizon/templates/auth/_logout_form.html b/horizon/templates/auth/_logout_form.html
new file mode 100644
index 0000000..c2e35e2
--- /dev/null
+++ b/horizon/templates/auth/_logout_form.html
@@ -0,0 +1,45 @@
+{% load i18n %}
+
+{% block pre_login %}
+<form id="" class="ng-pristine ng-valid ng-scope"
+      method="POST"
+      action="{% url 'login' %}"
+      autocomplete="off"
+      ng-controller="hzLoginController">
+  {% csrf_token %}
+{% endblock %}
+
+  <div class="panel panel-default">
+<style>
+.login .login-title {
+    display: block;
+    clear: both;
+    text-align: center;
+}
+</style>
+    <div class="panel-heading">
+    {% block login_header %}
+      <h3 class="login-title">
+        {% trans 'You are logged out of Horizon' %}
+      </h3>
+    {% endblock %}
+    </div>
+
+    <div class="panel-body">
+        <span>You may still be logged in to Chameleon Portal, to sign out of the portal, please go to the sign out page </span>
+        <a href="www.chameleoncloud.org/logout">here</a>.
+    </div>
+
+    <div class="panel-footer">
+      {% block login_footer %}
+        <button id="loginBtn" type="submit" class="btn btn-primary pull-right">
+          <span >{% trans "Sign In" %}</span>
+        </button>
+        <div class="clearfix"></div>
+      {% endblock %}
+    </div>
+  </div>
+
+{% block post_login%}
+</form>
+{% endblock %}
diff --git a/horizon/templates/auth/_logout_page.html b/horizon/templates/auth/_logout_page.html
new file mode 100644
index 0000000..51d0c8d
--- /dev/null
+++ b/horizon/templates/auth/_logout_page.html
@@ -0,0 +1,21 @@
+{% extends 'auth/_logout_form.html' %}
+{% load i18n %}
+
+{% block pre_login %}
+  <div class="container login">
+    <div class="row">
+      <div class="col-xs-11 col-sm-8 col-md-6 col-lg-5 horizontal-center">
+        {{ block.super }}
+{% endblock %}
+
+{% block login_header %}
+  {% include 'auth/_splash.html' %}
+  {{ block.super }}
+{% endblock %}
+
+{% block post_login %}
+      {{ block.super }}
+      </div>
+    </div>
+  </div>
+{% endblock %}
\ No newline at end of file
diff --git a/horizon/templates/auth/logout.html b/horizon/templates/auth/logout.html
new file mode 100644
index 0000000..1a5dbbf
--- /dev/null
+++ b/horizon/templates/auth/logout.html
@@ -0,0 +1,14 @@
+{% extends "base.html" %}
+{% load i18n %}
+
+{% block title %}{% trans "Logged-Out" %}{% endblock %}
+
+{% block body_id %}splash{% endblock %}
+
+{% block content %}
+  {% include 'auth/_logout.html' %}
+{% endblock %}
+
+{% block footer %}
+  {% include '_login_footer.html' %}
+{% endblock %}
\ No newline at end of file
diff --git a/openstack_dashboard/cc_web_sso_urls.py b/openstack_dashboard/cc_web_sso_urls.py
new file mode 100644
index 0000000..064a597
--- /dev/null
+++ b/openstack_dashboard/cc_web_sso_urls.py
@@ -0,0 +1,27 @@
+from django.conf.urls import url
+
+from openstack_auth import utils
+from openstack_auth import views
+from openstack_dashboard import cc_websso_views
+utils.patch_middleware_get_user()
+
+
+urlpatterns = [
+    url(r"^login/$", views.login, name='login'),
+    url(r"^logout/$", cc_websso_views.logout, name='logout'),
+    url(r'^switch/(?P<tenant_id>[^/]+)/$', views.switch,
+        name='switch_tenants'),
+    url(r'^switch_services_region/(?P<region_name>[^/]+)/$',
+        views.switch_region,
+        name='switch_services_region'),
+    url(r'^switch_keystone_provider/(?P<keystone_provider>[^/]+)/$',
+        views.switch_keystone_provider,
+        name='switch_keystone_provider')
+]
+
+if utils.is_websso_enabled():
+    print('IN virtualenv LOGIN urls.py')
+    urlpatterns.append(url(r"^websso/$", views.websso, name='websso'))
+
+if utils.is_websso_enabled():
+    urlpatterns.append(url(r"^ccwebsso/$", cc_websso_views.cc_websso, name='custom_websso'))
\ No newline at end of file
diff --git a/openstack_dashboard/cc_websso_views.py b/openstack_dashboard/cc_websso_views.py
new file mode 100644
index 0000000..71fced2
--- /dev/null
+++ b/openstack_dashboard/cc_websso_views.py
@@ -0,0 +1,64 @@
+import logging
+from django.contrib import auth
+from django.contrib.auth import views as django_auth_views
+from django.conf import settings
+from django import http as django_http
+from django.views.decorators.cache import never_cache
+from django.views.decorators.csrf import csrf_exempt
+from django.views.decorators.csrf import csrf_protect
+from django.views.decorators.debug import sensitive_post_parameters
+from openstack_auth import utils
+from openstack_auth import exceptions
+from openstack_auth import user as auth_user
+# from openstack_auth import views
+
+LOG = logging.getLogger(__name__)
+
+@sensitive_post_parameters()
+@csrf_exempt
+@never_cache
+def cc_websso(request):
+    print('######################## HTTP_REFERER= ' + request.META['HTTP_REFERER'])
+    """Logs a user in using a token from Keystone's POST."""
+    request.META['HTTP_REFERER'] = settings.OPENSTACK_KEYSTONE_URL
+    referer = settings.OPENSTACK_KEYSTONE_URL
+    LOG.info(referer)
+    auth_url = utils.clean_up_auth_url(referer)
+    LOG.info('auth url: ' + auth_url)
+    token = request.POST.get('token')
+    LOG.info('token: ' + token)
+    try:
+        request.user = auth.authenticate(request=request, auth_url=auth_url,
+                                         token=token)
+    except exceptions.KeystoneAuthException as exc:
+        msg = 'Login failed: %s' % six.text_type(exc)
+        res = django_http.HttpResponseRedirect(settings.LOGIN_URL)
+        res.set_cookie('logout_reason', msg, max_age=10)
+        return res
+
+    auth_user.set_session_from_user(request, request.user)
+    auth.login(request, request.user)
+    if request.session.test_cookie_worked():
+        request.session.delete_test_cookie()
+
+    if request.GET.get('next'):
+        return django_http.HttpResponseRedirect(request.GET.get('next'))
+    return django_http.HttpResponseRedirect(settings.LOGIN_REDIRECT_URL)
+
+
+def logout(request, login_url=None, **kwargs):
+    """Logs out the user if he is logged in. Then redirects to the log-in page.
+
+    :param login_url:
+        Once logged out, defines the URL where to redirect after login
+
+    :param kwargs:
+        see django.contrib.auth.views.logout_then_login extra parameters.
+
+    """
+    msg = 'Logging out user "%(username)s".' % \
+        {'username': request.user.username}
+    LOG.info(msg)
+
+    """ Securely logs a user out. """
+    return django_auth_views.logout(request, template_name='auth/logout.html')
\ No newline at end of file
diff --git a/openstack_dashboard/settings.py b/openstack_dashboard/settings.py
index 9136ec7..7c34b7b 100644
--- a/openstack_dashboard/settings.py
+++ b/openstack_dashboard/settings.py
@@ -185,7 +185,7 @@ INSTALLED_APPS = [
 
 TEST_RUNNER = 'django_nose.NoseTestSuiteRunner'
 AUTHENTICATION_BACKENDS = ('openstack_auth.backend.KeystoneBackend',)
-AUTHENTICATION_URLS = ['openstack_auth.urls']
+AUTHENTICATION_URLS = ['openstack_dashboard.cc_web_sso_urls','openstack_auth.urls',]
 AUTH_USER_MODEL = 'openstack_auth.User'
 MESSAGE_STORAGE = 'django.contrib.messages.storage.fallback.FallbackStorage'
 
@@ -375,9 +375,9 @@ OPENSTACK_IMAGE_FORMATS = [fmt for (fmt, name)
 if not WEBROOT.endswith('/'):
     WEBROOT += '/'
 if LOGIN_URL is None:
-    LOGIN_URL = WEBROOT + 'auth/login/'
+    LOGIN_URL = 'http://localhost:8888/sso/horizon/' #WEBROOT + 'auth/login/'
 if LOGOUT_URL is None:
-    LOGOUT_URL = WEBROOT + 'auth/logout/'
+    LOGOUT_URL = WEBROOT + 'auth/ccwebsso/logout/'
 if LOGIN_REDIRECT_URL is None:
     LOGIN_REDIRECT_URL = WEBROOT
 
-- 
1.8.3.1

