From ff89d6fbc9263074ed028e6532808f4473ad2fd6 Mon Sep 17 00:00:00 2001
From: Matthew R Hanlon <mrhanlon@tacc.utexas.edu>
Date: Fri, 3 Apr 2015 16:41:41 -0500
Subject: [PATCH 10/16] remove disk partition from rebuild instance form

---
 .../dashboards/project/instances/forms.py          | 26 +++++++++++-----------
 1 file changed, 13 insertions(+), 13 deletions(-)

diff --git a/openstack_dashboard/dashboards/project/instances/forms.py b/openstack_dashboard/dashboards/project/instances/forms.py
index a0b4f72..e34d74a 100644
--- a/openstack_dashboard/dashboards/project/instances/forms.py
+++ b/openstack_dashboard/dashboards/project/instances/forms.py
@@ -53,8 +53,8 @@ class RebuildInstanceForm(forms.SelfHandlingForm):
         label=_("Confirm Rebuild Password"),
         required=False,
         widget=forms.PasswordInput(render_value=False))
-    disk_config = forms.ChoiceField(label=_("Disk Partition"),
-                                    required=False)
+    # disk_config = forms.ChoiceField(label=_("Disk Partition"),
+    #                                 required=False)
 
     def __init__(self, request, *args, **kwargs):
         super(RebuildInstanceForm, self).__init__(request, *args, **kwargs)
@@ -74,17 +74,17 @@ class RebuildInstanceForm(forms.SelfHandlingForm):
             del self.fields['password']
             del self.fields['confirm_password']
 
-        try:
-            if not api.nova.extension_supported("DiskConfig", request):
-                del self.fields['disk_config']
-            else:
-                # Set our disk_config choices
-                config_choices = [("AUTO", _("Automatic")),
-                                  ("MANUAL", _("Manual"))]
-                self.fields['disk_config'].choices = config_choices
-        except Exception:
-            exceptions.handle(request, _('Unable to retrieve extensions '
-                                         'information.'))
+        # try:
+        #     if not api.nova.extension_supported("DiskConfig", request):
+        #         del self.fields['disk_config']
+        #     else:
+        #         # Set our disk_config choices
+        #         config_choices = [("AUTO", _("Automatic")),
+        #                           ("MANUAL", _("Manual"))]
+        #         self.fields['disk_config'].choices = config_choices
+        # except Exception:
+        #     exceptions.handle(request, _('Unable to retrieve extensions '
+        #                                  'information.'))
 
     def clean(self):
         cleaned_data = super(RebuildInstanceForm, self).clean()
-- 
2.7.1

