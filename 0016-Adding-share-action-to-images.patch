From 052fc14dab7987731f8654ba9cbefbfa8d0c022d Mon Sep 17 00:00:00 2001
From: Alejandro Rocha <rochaa@dhcp-146-6-176-253.tacc.utexas.edu>
Date: Thu, 14 Jun 2018 13:05:07 -0500
Subject: [PATCH 16/25] Adding share action to images

---
 .../app/core/images/actions/actions.module.js      | 13 +++-
 .../app/core/images/actions/share-image.service.js | 88 ++++++++++++++++++++++
 2 files changed, 99 insertions(+), 2 deletions(-)
 create mode 100644 openstack_dashboard/static/app/core/images/actions/share-image.service.js

diff --git a/openstack_dashboard/static/app/core/images/actions/actions.module.js b/openstack_dashboard/static/app/core/images/actions/actions.module.js
index 6fb6bcb..4e0312a 100644
--- a/openstack_dashboard/static/app/core/images/actions/actions.module.js
+++ b/openstack_dashboard/static/app/core/images/actions/actions.module.js
@@ -38,7 +38,8 @@
     'horizon.app.core.images.actions.delete-image.service',
     'horizon.app.core.images.actions.launch-instance.service',
     'horizon.app.core.images.actions.update-metadata.service',
-    'horizon.app.core.images.resourceType'
+    'horizon.app.core.images.resourceType',
+    'horizon.app.core.images.actions.share-image.service'
   ];
 
   function registerImageActions(
@@ -49,7 +50,8 @@
     deleteImageService,
     launchInstanceService,
     updateMetadataService,
-    imageResourceTypeCode
+    imageResourceTypeCode,
+    shareImageService
   ) {
     var imageResourceType = registry.getResourceType(imageResourceTypeCode);
     imageResourceType.itemActions
@@ -88,6 +90,13 @@
           text: gettext('Delete Image'),
           type: 'delete'
         }
+      })
+      .append({
+        id: 'shareImageService',
+        service: shareImageService,
+        template: {
+          text: gettext('Share')
+        }
       });
 
     imageResourceType.globalActions
diff --git a/openstack_dashboard/static/app/core/images/actions/share-image.service.js b/openstack_dashboard/static/app/core/images/actions/share-image.service.js
new file mode 100644
index 0000000..61eeb6a
--- /dev/null
+++ b/openstack_dashboard/static/app/core/images/actions/share-image.service.js
@@ -0,0 +1,88 @@
+/**
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License"); you may
+ * not use self file except in compliance with the License. You may obtain
+ * a copy of the License at
+ *
+ *    http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+ * License for the specific language governing permissions and limitations
+ * under the License.
+ */
+
+(function() {
+    'use strict';
+  
+    angular
+      .module('horizon.app.core.images')
+      .factory('horizon.app.core.images.actions.share-image.service', shareImageService);
+  
+    shareImageService.$inject = [
+      '$q',
+      'horizon.app.core.images.non_bootable_image_types',
+      'horizon.dashboard.project.workflow.launch-instance.modal.service',
+      'horizon.framework.util.q.extensions'
+    ];
+  
+    /**
+     * @ngDoc factory
+     * @name horizon.app.core.images.actions.shareImageService
+     * @param {Object} $q
+     * @param {Object} nonBootableImageTypes
+     * @param {Object} launchInstanceModal
+     * @param {Object} $qExtensions
+     * @Description
+     * Brings up the Launch Instance for image modal.
+     * On submit, launch the instance for the Image.
+     * On cancel, do nothing.
+     *
+     * @returns {Object} The service
+     */
+    function shareImageService(
+      $q,
+      nonBootableImageTypes,
+      launchInstanceModal,
+      $qExtensions
+    ) {
+      var service = {
+        perform: perform,
+        allowed: allowed
+      };
+  
+      return service;
+  
+      //////////////
+  
+      function perform(image) {
+        // Previous uses of this relocated the display using the successUrl;
+        // in this case we leave the post-action behavior up to the result
+        // handler.
+        // return launchInstanceModal.open({
+        //   'imageId': image.id
+        // });
+        console.log(image);
+        var params = '?name=' + escape(image.name);
+        params += '&short_description=' + escape(image.properties.description === undefined ? '' : image.properties.description);
+        return window.open('https://www.chameleoncloud.org/appliances/create' + params);
+      }
+  
+      function allowed(image) {
+        return $q.all([isBootable(image), isActive(image)]);
+      }
+  
+      function isActive(image) {
+        return $qExtensions.booleanAsPromise(image.status === 'active');
+      }
+  
+      function isBootable(image) {
+        return $qExtensions.booleanAsPromise(
+          nonBootableImageTypes.indexOf(image.container_format) < 0
+        );
+      }
+  
+    } // end of shareImageService
+  })(); // end of IIFE
+  
\ No newline at end of file
-- 
1.8.3.1

